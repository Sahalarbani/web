import React, { useState } from 'react';

interface CommentProps {
  postId: string;
  comments: { id: string; author: string; content: string }[];
}

const Comment: React.FC<CommentProps> = ({ postId, comments }) => {
  const [newComment, setNewComment] = useState('');
  const [author, setAuthor] = useState('');

  const handleCommentSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!newComment || !author) return;

    const response = await fetch('/api/comments', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ postId, author, content: newComment }),
    });

    if (response.ok) {
      setNewComment('');
      setAuthor('');
      // Optionally, you can refresh the comments or handle it in another way
    }
  };

  return (
    <div className="bg-gray-800 p-4 rounded-lg">
      <h3 className="text-lg font-bold text-neon-green">Comments</h3>
      <form onSubmit={handleCommentSubmit} className="mb-4">
        <input
          type="text"
          placeholder="Your name"
          value={author}
          onChange={(e) => setAuthor(e.target.value)}
          className="w-full p-2 mb-2 bg-gray-700 text-white border border-neon-blue rounded"
        />
        <textarea
          placeholder="Your comment"
          value={newComment}
          onChange={(e) => setNewComment(e.target.value)}
          className="w-full p-2 mb-2 bg-gray-700 text-white border border-neon-blue rounded"
        />
        <button
          type="submit"
          className="bg-neon-blue text-white py-2 px-4 rounded hover:bg-neon-green transition"
        >
          Submit
        </button>
      </form>
      <div className="comments-list">
        {comments.map((comment) => (
          <div key={comment.id} className="mb-2 p-2 bg-gray-700 rounded">
            <p className="font-bold text-neon-pink">{comment.author}</p>
            <p className="text-white">{comment.content}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Comment;